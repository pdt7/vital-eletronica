using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SVC_1.repositorio;
using SVC_1.entidades;

namespace SVC_1.controladores
{
    class ControladorCliente
    {

        private ClienteDAO clienteDAO;

        public ControladorCliente()
        {
            clienteDAO = new ClienteDAO();
        }

        public string cadastrar(string nome, string cidade, string endereco, string bairro, string telefone,
            string complemento, int numero)
        {
            try
            {
                Cliente cliente = new Cliente();
                cliente.Nome = nome;
                cliente.Cidade = cidade;
                cliente.Endereco = endereco;
                cliente.Bairro = bairro;
                cliente.Telefone = telefone;
                cliente.Numero = numero;
                cliente.Complemento = complemento;
                clienteDAO.cadastrar(cliente);
            }
            catch (Exception ex)
            {
                return "Não foi possível cadastrar o cliente: " + ex.Message;
            }

            return "Cliente cadastrado com sucesso!!!";
        }

        public string atualizarQuantidade(int idProduto, float quantidade)
        {
            try
            {
                Cliente produto = consultarProdutoPorId(idProduto);
                //produto.Quantidade = produto.Quantidade + quantidade;
                //produtoDAO.atualizarQuantidade(produto);
            }
            catch (Exception ex)
            {
                throw new Exception("Não foi possível atualizar o produto: " + ex.Message);
            }

            return "Produto atualizado com sucesso!!!";
        }


        public bool existeProdutoPorNome(string nome, int idObra)
        {
            try
            {
                return false;// return produtoDAO.consultarProdutoPorNome(nome, idObra) != null;
            }
            catch (Exception ex)
            {
                throw new Exception("Não foi possível Consultar o produto: " + ex.Message);
            }
        }

        public string atualizar(Cliente produto)
        {
            try
            {
                //produtoDAO.atualizar(produto);
            }
            catch (Exception ex)
            {
                throw new Exception("Não foi possível atualizar o produto: " + ex.Message);
            }

            return "Produto atualizado com sucesso!!!";
        }

        public Cliente consultarProdutoPorId(int idProduto)
        {
            try
            {
                return null;//return produtoDAO.consultarProdutoPorId(idProduto);
            }
            catch (Exception ex)
            {
                throw new Exception("Não foi possível Consultar o produto: " + ex.Message);
            }
        }

        public List<Cliente> consultarCliente(string valorConsulta)
        {
            try
            {
                return clienteDAO.consultarCliente(valorConsulta);
            }
            catch (Exception ex)
            {
                throw new Exception("Não foi possível Consultar o produto: " + ex.Message);
            }
        }

        public string remover(int idProduto)
        {
            try
            {
                
                return "Produto removido com sucesso!!!";
            }
            catch (Exception ex)
            {
                throw new Exception("Não foi possível Remover o produto: " + ex.Message);
            }
        }

        public string atualizar(int idProduto, string nome, float quantidadeMinima, string codigo, int categoria, int idUnidadeMedida, int idObra)
        {
            try
            {
               
            }
            catch (Exception ex)
            {
                throw new Exception("Não foi possível atualizar o produto: " + ex.Message);
            }

            return "Produto atualizado com sucesso!!!";
        }

    }
}
